/*Todo: make this stylesheet as easy to understand as the improved on subset of this, found in stylePick\default.js*/
*{
	transition: all 0.5s;  /*The magic that makes changing style (including when loading the page), a graceful and pleasant change, rather than a sudden, and sometimes jarring thing */
}
[resize="both"], [resize="horizontal"], [resize="vertical"],
[style*="resize: both"], [style*="resize: horizontal"], [style*="resize: vertical"],
textarea{/*Selectors for things that can be resized*/
	transition: all 0.5s, height 0s, width 0s; /* we do not want transitions to slow down reacting to users resizing things like the code area or the style area, as that makes it hard to accurately get the size you want first try*/
}

body{
	width:100%;
	margin: 0px;
}

header{
	position: relative; /*This rule overruled to "sticky" by a media query when the screen is tall enough to have it onscreen all the time*/
	top: 0px;
	width: 100%;
	text-align: center;
	background-color: #FFFFFFF1;
	z-index: 2;
}
header span{
	margin-left: 38px; /*Prevents being overlapped by the main menu button*/
}
header span *{
	display: inline;
}
main{
	padding-bottom: 70px;
	width: 98%;
	padding-left: 1%;
	padding-right: 1%;
	background-color: lightGreen;
	/*z-index:1;  z-index does not take effect when position is static. Phil experimented with this as a potential solution for some themes not working as expected, but overhauling the position of main feels unpractical right now*/
}
footer{
	position: relative;
	bottom: 0px;
	width: 100%;
	text-align: center;
	background-color:#9EFEFE;
	z-index: 2;
}

/* For making the favicon (it still needs some work, so I am leaving this temporary code here)

#btnCodeLogo{
	height: 190px;
	width: 190px;
	font-size: 32pt;
	border-radius: 24px;
}*/

#menuOpenBtn, #mainMenuClose{ /* button for making the menu show, and the button within the main menu modal for closing it */
	height: 36px;
	width: 36px;
	margin-right: 10px;
	font-weight: 300;
	font-size: larger;
	position: absolute;
}
#menuOpenBtn{/*Just the button for making the menu show*/
	left: 1%;
}
#mainMenuClose{/*Just the button within the main menu modal for closing it*/
	right: 0px;
}
#mainMenuModal{/*includes the mostly seethrough layer that stops clicks going to contents behind*/
	padding: 0px;
}
#mainMenuContents{/*Everything shown in the modal. Todo: fix a bug that eludes me (at least 40min spent trying to fix so far) where there is a slight gap top and bottom around #mainMenuContents that that triggers the close action but visually looks like it is the edge of the content area, does not appear to be padding or margin!*/
	/*background-color: red;*/
	padding: 0px;
	margin: 0px;
	height: 100%;
	min-height: 100%;
}

#codeBtns{
	height: 68px;
    display: flex;
    overflow-x: auto;
    overflow-y: hidden;
    flex-direction: row;
    align-items: flex-start;
    justify-content: flex-start;
}

#codeBtns button{ /*Each button inside the #codeBtns container div*/
	width: min-content;
}

#controlBtns{
	height: 88px;
    display: flex;
    overflow-x: auto;
    overflow-y: hidden;
    flex-direction: row;
    align-items: flex-start;
    justify-content: flex-start;
}

#controlBtns button{ /*Each button inside the #controlBtns container div*/
	height: 86px;
}

#stylerBtnsContainer{/*a div with all the stylerBtns inside*/
	float: right;
}
.stylerBtns{/*Styler btns*/
	width: 100px;
	margin: 2px;
}


button{
	height: 66px;
	/*Todo: min-width without messing btns up*/
	border-radius: 0px;
	border-width: 0px;
	margin-right: 2px;
}

.proto{ /*areas of the screen that are prototypes, eg while Phil is developing the btn maker*/
	border: #282c34 2px solid;
}

#btnJS{
	font-size: 1em;
}
.JS{/*All of the buttons/elements for coding JS*/
	background-color: #f7e018;  /*this colour was taken from an unofficial (but fairly widely used) logo by Chris Williams. w3C logo colour is #005a9c, previous default was DodgerBlue - changed because the yellow version of the logo looks better IMHO*/
	color: #000000;
	font-weight: 700;
}
.CSS{
	background-image: linear-gradient(to top, green, blue);
	color: white;
}

.CSS.group{
	/*need two background images simultaneously, rather than having the .group rules wipe over the .CSS background rules*/
	background-image:  url("arrow.png"), linear-gradient(to top, green, blue);
	background-repeat: no-repeat, repeat;
	background-position: right, right;
}
.CSS.openGroup{
	/*need two background images simultaneously, rather than having the .openGroup rules wipe over the .CSS background rules*/
	background-image:  url("arrowDwn.png"), linear-gradient(to top, green, blue);
	background-repeat: no-repeat, repeat;
	background-position: right, right;
}

.HTML{
	background-color: #3c790a;
	color: white;
}

.React{
	background-color: #282c34;
	color: #61dafb;
	font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif; /*font-family that www.reactjs.org uses*/
}
@font-face {
    font-family: Flux-Regular;
    src: url("fonts/FluxRegular.otf") format("opentype");
}
#btnpython{
	font-size: 1em; /*while it has ðŸš§ symbols font size needs to be smaller to fit three rows in the height of the btn*/
}
.python{
	/*Styling taken from python.org homepage*/
	background: #1c3b56;
	color: #ffd343;
	/*color: #fff*/
	font-size: 1.1em;
	font-family: Flux-Regular, SourceSansProBold, Arial, sans-serif;
}

#btnphp{
	font-style: italic;
}
.php{
	/*Styling taken from php.net homepage*/
	background-color: #7A86B8;
	color: #1f222e;
	font-weight: 700;
}

.Java{
	background: #ffffff;
	color: #ec2024;
	font-weight: 700;
}

.CSharp{
	background: linear-gradient(45deg, #189f20 50%, #009404 50%);
	color: #ffffff;
}

.Ada{ /*(Lang coming soon)*/
	background-color: #001ec8; /*The blue colour in the larger heart of the bird in the logo (less bland than using black and white, though is it readable?)*/
	color: #000000;
}

#btnEmoji{
	font-size: 1em;
}

.Emoji{
    background-color: #3344ED;
    color: Tomato;
	font-size: 1.75em;
}

.group{
	background-image: url("arrow.png");
	background-repeat: no-repeat;
	background-position: right;
    background-size: 19px;
	padding-right: 19px;
	transition: initial; /*The transition effect applied generally, causes toggling group - opengroup and vice versa to look like poor performance*/
}
.openGroup{
	background-image: url("arrowDwn.png");
	background-repeat: no-repeat;
	background-position: right;
    background-size: 19px;
	padding-right: 19px;
	transition: initial; /*The transition effect applied generally, causes toggling group - opengroup and vice versa to look like poor performance*/
}

#codeTA{
	width: 100%;
	height: 300px;
	-moz-tab-size : 4;
    -o-tab-size : 4;
    tab-size : 4;
	white-space: pre;
	overflow-wrap: normal;
	overflow-x: auto;
	font-family: monospace; /*seems to be the default in most browsers anyway, but for some languages like Python it is very useful to have a monospace font. Haven't specified an exact font because that particular rabbit hole doesn't seem to be very important to the goal of btncode, in fact that might be something cool for users to choose in the styler*/
}

select{
	height: 66px;
}

th, td{
	margin-left: 1px;
	margin-right: 6px;
	border-left: burlywood 2px dashed; /*A nice light brown colour*/
}
th:first-child, td:first-child{
	border-left: none;
}

th:last-child, td:last-child{
	margin-left: 1px;
	margin-right: 1px;
}

tbody tr td{
	border-top: burlywood 2px dashed;
}

/*Javascript is used to apply .hide and .show as appropriate*/
.hide {
	display: none !important;
}
.show {
	display: block;
}

.improvementsText{
	max-height: 50px;
	overflow-y: auto;
	background-color: burlywood;
	margin-top: 0px;
	margin-bottom: 0px;
}

@media only screen and (min-height: 468px) {
	/*Responsive breakpoints are normally done on min-widths, but in this case it is the height that is the main thing we are working around - most of the outer elements have % widths so the design is pretty responsive even before mediaQueries, but we had a specific issue when typing on mobile - when the onscreen keyboard comes in, the viewport is too short to display the header and footer and still have room to see the btns and the textarea at the same time*/
	header{
		position: sticky;
	}
	
	footer{
		position: fixed;
	}
	#codeBtns{
		/*Space for a scrollbar*/
		height: 86px;
	}

}
/**Prevent styler explainer text from looking weird at certain screen sizes, from an effect of stylerBtnsContainer floating next to it */
@media only screen and (min-width: 867px) and (max-width: 1018px){
	#stylerBtnsContainer  {
		width: 98%;
	}
}