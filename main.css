body{
	width:100%;
	margin: 0px;
}

header{
	position: absolute;
	top: 0px;
	width: 100%;
	text-align: center;
	background-color: #FFFFFFF1;
}

/* For making the favicon (it still needs some work, so I am leaving this temporary code here)

#btnCodeLogo{
	height: 190px;
	width: 190px;
	font-size: 32pt;
	border-radius: 24px;
}*/


main{
	padding-bottom: 70px;
	width: 98%;
	padding-left: 1%;
	padding-right: 1%;
	background-color: lightGreen;
}

footer{
	position: relative;
	bottom: 0px;
	width: 100%;
	text-align: center;
	background-color:#EEFEEE;
	
}

#codeBtns{
	height: 68px;
    display: flex;
    overflow-x: auto;
    overflow-y: hidden;
    flex-direction: row;
    align-items: flex-start;
    justify-content: flex-start;
}

#codeBtns button{
	width: min-content;
}

#controlBtns{
	height: 88px;
    display: flex;
    overflow-x: auto;
    overflow-y: hidden;
    flex-direction: row;
    align-items: flex-start;
    justify-content: flex-start;
}

#controlBtns *{
	height: 86px;
}

button{
	height: 66px;
	/*Todo: min-width without messing btns up*/
	border-radius: 8px;
}

.oddStripe{
	background-color: #9999FF;
}

#btnJS{
	font-size: 1em;
}
.JS{
	background-color: DodgerBlue;
	/*w3C logo colour is #005a9c but I prefer my initial choice personally*/
	color: #000000;
}
.CSS{
	background-image: linear-gradient(to top, green, blue);
	color: white;
}

.CSS.group{
	/*need two background images simulataneously, rather than having the .group rules wipe over the .CSS background rules*/
	background-image:  url("arrow.png"), linear-gradient(to top, green, blue);
	background-repeat: no-repeat, repeat;
	background-position: right, right;
}
.CSS.openGroup{
	/*need two background images simulataneously, rather than having the .openGroup rules wipe over the .CSS background rules*/
	background-image:  url("arrowDwn.png"), linear-gradient(to top, green, blue);
	background-repeat: no-repeat, repeat;
	background-position: right, right;
}

.HTML{
	background-color: #3c790a;
	color: white;
}
.Python{
	/*Styling taken from Python.org homepage*/
	background: #1c3b56;
	color: #ffd343;
	/*font-size: 1.3125em;*/
	font-family: SourceSansProBold, Arial, sans-serif;
}

#btnphp{
	font-style: italic;
}
.php{
	/*Styling taken from php.net homepage*/
	background-color: #7A86B8;
	color: #1f222e;
	font-weight: 700;
}

#btnEmoji{
	font-size: 1em;
}

.Emoji{
    background-color: #3344ED;
    color: Tomato;
	font-size: 1.75em;
}

.group{
	background-image: url("arrow.png");
	background-repeat: no-repeat;
	background-position: right;
    background-size: 19px;
	padding-right: 19px;
}
.openGroup{
	background-image: url("arrowDwn.png");
	background-repeat: no-repeat;
	background-position: right;
    background-size: 19px;
	padding-right: 19px;
}

#codeTA{
	width: 100%;
	height: 300px;
	-moz-tab-size : 4;
    -o-tab-size : 4;
    tab-size : 4;
	white-space: pre;
	overflow-wrap: normal;
	overflow-x: auto;
	font-family: monospace; /*seems to be the default in most browsers anyway, but for some languages like Python it is very useful to have a monospace font. Haven't specified an exact font because that particular rabbit hole doesn't seem to be very important to the goal of btncode, in fact that might be something cool for users to choose in the styler*/
}

select{
	height: 66px;
}

/*Javascript is used to apply .hide and .show as appropriate*/
.hide {
	display: none !important;
}
.show {
	display: block;
}

@media only screen and (min-height: 468px) {
	/*Responsive breakpoints are normally done on min-widths, but in this case it is the height that is the main thing we are working around - most of the outer elements have % widths so the design is pretty responsive even before mediaQueries, but we had a specific issue when typing on mobile - when the onscreen keyboard comes in, the viewport is too short to display the header and footer and still have room to see the btns and the textarea at the same time*/
	header{
		position: sticky;
	}
	
	footer{
		position: fixed;
	}
	#codeBtns{
		/*Space for a scrollbar*/
		height: 86px;
	}

}